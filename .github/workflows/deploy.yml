name: Deploy (EC2)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/skedway-backend

jobs:
  backend_build_and_push:
    name: Build & Push backend image (GHCR)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

  backend_deploy:
    name: Pull, up & migrate on EC2
    runs-on: ubuntu-latest
    needs: backend_build_and_push
    steps:
      - name: SSH to EC2 and deploy backend
        uses: appleboy/ssh-action@v1.0.3
        env:
          GH_ACTOR: ${{ github.actor }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER || 'ubuntu' }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script_stop: true
          script: |
            set -e
            echo "$GH_TOKEN" | sudo docker login ghcr.io -u "$GH_ACTOR" --password-stdin

            cd ~/skedway-event-management

            sudo mkdir -p /opt/app/nginx
            sudo mkdir -p /opt/app/frontend

            sudo docker compose -f docker-compose.prod.yml pull backend
            sudo docker compose -f docker-compose.prod.yml up -d --remove-orphans

            sudo docker compose -f docker-compose.prod.yml exec -T backend php artisan migrate --force

  frontend_build:
    name: Build frontend (Vite)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Prepare env
        run: |
          echo "VITE_API_BASE_URL=${{ vars.VITE_API_BASE_URL || '/api' }}" > .env.production

      - name: Build
        run: npm run build

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist

  frontend_deploy:
    name: Upload dist to EC2 & restart Nginx
    runs-on: ubuntu-latest
    needs: frontend_build
    steps:
      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: dist

      - name: Copy dist to EC2 (/tmp/dist)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER || 'ubuntu' }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: "dist/**"
          target: "/tmp/dist"
          overwrite: true

      - name: Publish to /opt/app/frontend and restart Nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER || 'ubuntu' }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script_stop: true
          script: |
            set -e
            sudo mkdir -p /opt/app/frontend
            sudo rsync -av --delete /tmp/dist/ /opt/app/frontend/
            sudo docker compose -f ~/skedway-event-management/docker-compose.prod.yml restart nginx