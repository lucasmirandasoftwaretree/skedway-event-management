name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend (Laravel + Docker)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start containers
        run: |
          docker version
          docker compose version
          docker compose up -d --build backend db
          docker compose ps

      - name: Prepare Laravel (composer, env, key, migrate)
        run: |
          docker compose exec -T backend php -r "file_exists('.env') || copy('.env.example','.env');"
          docker compose exec -T backend composer install --no-interaction --prefer-dist --no-progress
          docker compose exec -T backend php artisan key:generate
          for i in {1..20}; do
            if docker compose exec -T backend php -r "try { new PDO('mysql:host='.(getenv('DB_HOST')?:'db').';port='.(getenv('DB_PORT')?:'3306'), getenv('DB_USERNAME')?:'root', getenv('DB_PASSWORD')?:''); echo 'ok'; } catch (Throwable $e) { exit(1);}"; then
              echo 'DB ready'; break
            fi
            echo 'Waiting DB...'; sleep 3
          done
          docker compose exec -T backend php artisan migrate --force || true

      - name: PHP Style (Pint)
        run: docker compose exec -T backend php vendor/bin/pint --test

      - name: PHP Unit
        run: docker compose exec -T backend php vendor/bin/phpunit --testdox

      - name: Teardown
        if: always()
        run: docker compose down -v

  frontend:
    name: Frontend (Vite/React)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install
        run: npm ci

      - name: Typecheck
        run: npm run typecheck --if-present

      - name: Lint
        run: npm run lint --if-present

      - name: Build
        run: npm run build

      - name: Upload dist
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist