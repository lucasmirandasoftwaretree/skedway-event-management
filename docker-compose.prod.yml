services:
  redis:
    image: redis:7
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - /opt/app/backend.env
    depends_on:
      redis:
        condition: service_started

  nginx:
    image: nginx:1.25-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - /opt/app/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./backend:/var/www/html:ro
      - /opt/app/frontend:/usr/share/nginx/html:ro
      - letsencrypt:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    depends_on:
      backend:
        condition: service_started

  certbot:
    image: certbot/certbot
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $!; certbot renew --webroot -w /var/www/certbot; done'

volumes:
  letsencrypt:
  certbot_www: